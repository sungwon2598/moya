name: Backend Deploy To Home Server

on:
  push:
    branches:
      - main
    paths:
      - 'back/**'
  pull_request:
    types: [opened, closed]
    paths:
      - 'back/**'

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: SSH로 홈서버 접속하기
        uses: appleboy/ssh-action@v1.0.3
        env:
          APPLICATION_PROPERTIES: ${{ secrets.APPLICATION_PROPERTIES }}
        with:
          host: ${{ secrets.HOME_SERVER_HOST }}
          username: ${{ secrets.HOME_SERVER_USERNAME }}
          password: ${{ secrets.HOME_SERVER_PASSWORD }}
          port: ${{ secrets.HOME_SERVER_PORT }}
          envs: APPLICATION_PROPERTIES
          script_stop: true
          script: |
            cd /home/ubuntu/moya/backend  # backend 디렉토리로 경로 수정
            git remote set-url origin git@github.com:sungwon2598/moya.git
            git pull origin main
            echo "$APPLICATION_PROPERTIES" > src/main/resources/application.yml
            ./gradlew clean build
            sudo fuser -k -n tcp 8080 || true
            nohup java -Xms128m -Xmx256m -XX:+UseSerialGC -XX:MaxHeapFreeRatio=70 -XX:MinHeapFreeRatio=40 -XX:+UseStringDeduplication -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/home/ubuntu/heapdump.hprof -jar build/libs/*SNAPSHOT.jar > ./output.log 2>&1 &

      - name: Notify Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            MESSAGE="백엔드 코드가 main 브랜치에 푸시되었습니다.\n\n커밋 메시지: ${{ github.event.head_commit.message }}"
          elif [ "${{ github.event_name }}" = "pull_request" ] && [ "${{ github.event.action }}" = "opened" ]; then
            MESSAGE="백엔드 코드의 새로운 PR이 생성되었습니다.\n\nPR 번호: #${{ github.event.pull_request.number }}\n\nPR 제목: ${{ github.event.pull_request.title }}"
          elif [ "${{ github.event_name }}" = "pull_request" ] && [ "${{ github.event.action }}" = "closed" ] && [ "${{ github.event.pull_request.merged }}" = "true" ]; then
            MESSAGE="백엔드 코드 PR이 main 브랜치에 병합되었습니다.\n\nPR 번호: #${{ github.event.pull_request.number }}\n\nPR 제목: ${{ github.event.pull_request.title }}"
          else
            MESSAGE="백엔드 배포 워크플로우가 실행되었습니다."
          fi
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"$MESSAGE\"}" $SLACK_WEBHOOK_URL
