name: CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'front/**'
  pull_request:
    branches:
      - main
    paths:
      - 'front/**'

jobs:
  cicd:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: front

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.10.0
          cache: 'npm'
          cache-dependency-path: 'front/package-lock.json'

      # 클린 설치
      - name: Clean Install Dependencies
        run: |
          rm -rf node_modules package-lock.json dist
          npm install
          npm install -D @rollup/rollup-linux-x64-gnu

      - name: Type check
        run: npm run type-check

      # Build with explicit output directory
      - name: Build
        run: |
          npm run build:prod
        env:
          VITE_APP_TITLE: ${{ secrets.VITE_APP_TITLE }}
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          VITE_MODE: 'production'
          VITE_TEST_DATA: ${{ secrets.VITE_TEST_DATA }}

      # S3 배포 - 명확한 경로 지정
      - name: Deploy to S3
        run: |
          aws s3 sync dist/ s3://${{ secrets.FE_AWS_S3_BUCKET }} \
            --delete \
            --cache-control "max-age=31536000,public" \
            --exclude "node_modules/**" \
            --exclude ".git/**" \
            --exclude ".github/**" \
            --exclude "src/**" \
            --exclude "*.map"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.FE_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.FE_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.FE_AWS_REGION }}

      # CloudFront 캐시 무효화
      - name: Invalidate CloudFront Cache
        if: success() && github.ref == 'refs/heads/main'
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.FE_AWS_CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.FE_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.FE_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.FE_AWS_REGION }}